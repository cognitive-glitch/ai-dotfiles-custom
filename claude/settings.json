{
    "permissions": {
        "allow": [
            "Bash(deno task *)",
            "Bash(npm run *)",
            "Bash(npx *)",
            "Bash(cargo *)",
            "Bash(go *)",
            "Bash(git *)",
            "Bash(git worktree *)",
            "Bash(gh *)",
            "Bash(docker *)",
            "Bash(kubectl *)",
            "Bash(terraform *)",
            "Bash(grep *)",
            "Bash(rg *)",
            "Bash(ripgrep *)",
            "Bash(find *)",
            "Bash(gh *)",
            "Bash(fd *)",
            "Bash(fzf *)",
            "Bash(bat *)",
            "Bash(exa *)",
            "Bash(eza *)",
            "Bash(delta *)",
            "Bash(zoxide *)",
            "Bash(duf *)",
            "Bash(htop *)",
            "Bash(btop *)",
            "Bash(jq *)",
            "Bash(yq *)",
            "Bash(hexyl *)",
            "Bash(uvx *)",
            "Bash(uv *)",
            "Bash(ruff *)",
            "Bash(ty *)",
            "Bash(pyright *)",
            "Bash(rustup *)",
            "Bash(mkdir -p /tmp/claude-scratch*)",
            "Bash(touch /tmp/claude-*)",
            "Bash(echo * > /tmp/claude-*)",
            "Bash(cat /tmp/claude-*)",
            "WebFetch(domain:docs.cilium.io)",
            "WebFetch(domain:fresh.deno.dev)",
            "WebFetch(domain:preactjs.com)",
            "WebFetch(domain:tailwindcss.com)",
            "WebFetch(domain:docs.deno.com)",
            "WebFetch(domain:github.com)",
            "WebFetch(domain:jsr.io)",
            "WebFetch(domain:dragonflydb.io)",
            "WebFetch(domain:fluxcd.io)",
            "WebFetch(domain:docs.github.com)",
            "WebFetch(domain:connectrpc.com)",
            "WebFetch(domain:buf.build)",
            "WebFetch(domain:grpc.io)",
            "WebFetch(domain:protobuf.dev)",
            "WebFetch(domain:gobyexample.com)",
            "WebFetch(domain:go.dev)",
            "WebFetch(domain:spring.io)",
            "WebFetch(domain:docs.spring.io)",
            "WebFetch(domain:quarkus.io)",
            "WebFetch(domain:smallrye.io)",
            "WebFetch(domain:docs.temporal.io)",
            "WebFetch(domain:kubernetes.io)",
            "WebFetch(domain:12factor.net)",
            "WebFetch(domain:opentelemetry.io)",
            "WebFetch(domain:prometheus.io)",
            "WebFetch(domain:grafana.com)",
            "WebFetch(domain:jaegertracing.io)",
            "WebFetch(domain:www.postgresql.org)",
            "WebFetch(domain:docs.redpanda.com)",
            "WebFetch(domain:docs.rs)",
            "WebFetch(domain:tokio.rs)",
            "WebFetch(domain:serde.rs)",
            "WebFetch(domain:docs.scylladb.com)",
            "WebFetch(domain:www.talos.dev)",
            "WebFetch(domain:rust-lang.github.io)",
            "WebFetch(domain:pkg.go.dev)",
            "WebFetch(domain:gin-gonic.com)",
            "WebFetch(domain:docs.gofiber.io)",
            "WebFetch(domain:www.graalvm.org)",
            "WebFetch(domain:microprofile.io)",
            "WebFetch(domain:wiki.postgresql.org)",
            "WebFetch(domain:cassandra.apache.org)",
            "WebFetch(domain:context7.com)",
            "WebFetch(domain:university.scylladb.com)",
            "WebFetch(domain:external-secrets.io)",
            "WebFetch(domain:developer.1password.com)",
            "WebFetch(domain:nvlpubs.nist.gov)",
            "WebFetch(domain:junit.org)",
            "WebFetch(domain:testcontainers.com)",
            "WebFetch(domain:javadoc.io)",
            "WebFetch(domain:assertj.github.io)",
            "WebFetch(domain:trino.io)",
            "WebFetch(domain:iceberg.apache.org)",
            "WebFetch(domain:projectnessie.org)",
            "WebFetch(domain:spark.apache.org)",
            "WebFetch(domain:airflow.apache.org)",
            "WebFetch(domain:rook.io)",
            "mcp__serena",
            "mcp__aid",
            "mcp__code-parser""mcp__context7",
            "mcp__thinking-tool",
            "mcp__sequential-thinking",
            "mcp__sequentialthinking-tools",
            "mcp__time",
            "mcp__actor-critic-thinking",
            "mcp__consult7",
            "mcp__ref-tools",
        ],
        "deny": [
            "Bash(rm -rf /)",
            "Bash(:(){ :|:& };:)",
            "Bash(dd if=/dev/zero of=/dev/*)",
            "Bash(mkfs.*)",
            "Bash(> /dev/sda*)"
        ]
    },
    "env": {
        "CLAUDE_CODE_ENABLE_TELEMETRY": "0",
        "DISABLE_TELEMETRY": "1",
        "BASH_MAX_TIMEOUT_MS": "600000",
    },
    "preferredNotifChannel": "terminal_bell",
    "verbose": true,
    "cleanupPeriodDays": 90,
    "includeCoAuthoredBy": false
}
